buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE',
                'org.akhikhl.gretty:gretty:+'
        )
    }
}

//apply plugin: 'java'
//apply plugin: 'war'
//apply plugin: 'io.spring.dependency-management'
//apply plugin: 'org.unbroken-dome.test-sets' version "1.2.0"
//apply plugin: 'org.akhikhl.gretty'

//If you are using Gradle 2.1+, you can use the new Plugins DSL. The
//following snippet replaces every line above this comment:
plugins {
    id 'java'
    id 'war'
    id 'io.spring.dependency-management'  version '1.0.8.RELEASE'
    id 'org.akhikhl.gretty' version "2.0.0"
    id 'org.springframework.boot' version '2.1.8.RELEASE'
   //     id 'org.unbroken-dome.test-sets' version '2.1.1'
}








gretty {
    httpPort = 8070
    contextPath = '/'
    servletContainer = 'jetty9.3'
    integrationTestTask = 'endToEndTest'
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Athens-SR3'
    }
}

dependencies {
    compile(
            'org.slf4j:slf4j-api',
            'org.springframework:spring-aspects',
            'org.springframework:spring-context-support',
            'org.springframework:spring-webmvc',
    )
    providedCompile(
            'javax.servlet:javax.servlet-api'
    )
    implementation(
            'javax.servlet:jstl',
            'log4j:log4j',
            'org.slf4j:slf4j-log4j12',
            'org.slf4j:jcl-over-slf4j',
    )
    testImplementation(
            'javax.el:javax.el-api',
            'org.glassfish.web:el-impl:2.2',
            'junit:junit',
            'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1',
            'org.hamcrest:hamcrest-library',
            'org.assertj:assertj-core:3.5.2',
            'org.springframework:spring-test'
    )
    
}

test {
    useJUnit {
        includeCategories 'com.testwithspring.intermediate.UnitTest'
    }
    testLogging {
        showStandardStreams = true
    }
}


